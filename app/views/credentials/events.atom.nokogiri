xml.feed('xmlns'=> "http://www.w3.org/2005/Atom",
         'xmlns:activity'=>"http://activitystrea.ms/spec/1.0/",
	 'xmlns:pca'=>"http://pca.nesc.gla.ac.uk/ns",
         "xmlns:thr"=>"http://purl.org/syndication/thread/1.0") do
  xml.title "Feed Name"
  xml.link :rel => :hub, :href => endpoint_subscriptions_url
  xml.link :rel => :self, :href=> events_credential_url(@cred)
  xml.link :rel => :alternate, :href=>credential_url(@cred)
  xml.id_ @cred.id
  xml.updated @cred.last_event_at.to_formatted_s(:rfc)
  xml.generator( "PCA generator", :uri=> "https://pca.nesc.gla.ac.uk", :version => "1.0")  

  xml.author :class=>"service" do
    xml.name root_url
    xml.url root_url
  end	    

  xml.author :class => "credential" do
    xml.name @cred
    xml.url credential_url(@cred)
  end

   @cred.connections.order_by( [[:updated_at=>:desc]]).each do |conn|
    conn.events.order_by( [[:created_at=>:desc]]).each do |event|
      xml.entry do
        xml.title sprintf("%s from %s to %s",event.action,conn.peer,conn.server)
        xml.link :rel => :alternate, :type=> "text/html", :href => event_url(event)
        xml.id_  event.id
        xml["activity"].verb event.action
        xml["activity"].object do
          xml["activity"].send("object-type","http://activitystrea.ms/schema/1.0/service") 
          xml.id_ "id"
          xml.summary "summary" 
          xml.link :rel => :alternate, :type=> "text/html", :href => event_url(event)
          xml["thr"].send("in-reply-to", :ref => event_url(event.parent), :type => "text/html", :href=>event_url(event.parent)) if event.parent
        end
        xml.updated event.created_at.to_formatted_s(:rfc)
        xml.summary( :type=>"text").text sprintf "%s performed on %s by %s at %s", event.action, conn.server, conn.peer, event.created_at.to_formatted_s(:rfc)
      end
    end
  end
end
